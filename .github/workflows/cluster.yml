
name: Deploy to Amazon EKS

on:
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Step 2: Authenticate with AWS ECR
      - name: Authenticate with AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Step 3: Push Docker Image to ECR
      - name: Push Docker Image to ECR
        run: |
          docker tag -t mayankbisht26/flaskapp:v1 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/docker-image-repo:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/docker-image-repo:latest

      # Step 4: Create an Amazon EKS Cluster
      - name: Create Amazon EKS Cluster
        run: |
          aws eks create-cluster \
            --name cluster1 \
            --role-arn arn:aws:iam::339713099483:role/aws-service-role/eks.amazonaws.com/AWSServiceRoleForAmazonEKS \
            --resources-vpc-config subnetIds=subnet-008fb6dae29111231,securityGroupIds=sg-0b51020b235b0751c

      # Step 5: Configure kubectl
      - name: Configure kubectl
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name cluster1

      # Step 6: Deploy Docker Image to EKS Cluster
      - name: Deploy to Amazon EKS
        run: |
          kubectl apply -f deployment.yml
